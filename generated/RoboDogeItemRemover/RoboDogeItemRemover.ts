// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddNft extends ethereum.Event {
  get params(): AddNft__Params {
    return new AddNft__Params(this);
  }
}

export class AddNft__Params {
  _event: AddNft;

  constructor(event: AddNft) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RemoveNft extends ethereum.Event {
  get params(): RemoveNft__Params {
    return new RemoveNft__Params(this);
  }
}

export class RemoveNft__Params {
  _event: RemoveNft;

  constructor(event: RemoveNft) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RoboDogeItemRemover extends ethereum.SmartContract {
  static bind(address: Address): RoboDogeItemRemover {
    return new RoboDogeItemRemover("RoboDogeItemRemover", address);
  }

  hidden(param0: BigInt): boolean {
    let result = super.call("hidden", "hidden(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try_hidden(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("hidden", "hidden(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddItemCall extends ethereum.Call {
  get inputs(): AddItemCall__Inputs {
    return new AddItemCall__Inputs(this);
  }

  get outputs(): AddItemCall__Outputs {
    return new AddItemCall__Outputs(this);
  }
}

export class AddItemCall__Inputs {
  _call: AddItemCall;

  constructor(call: AddItemCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddItemCall__Outputs {
  _call: AddItemCall;

  constructor(call: AddItemCall) {
    this._call = call;
  }
}

export class AddItemsCall extends ethereum.Call {
  get inputs(): AddItemsCall__Inputs {
    return new AddItemsCall__Inputs(this);
  }

  get outputs(): AddItemsCall__Outputs {
    return new AddItemsCall__Outputs(this);
  }
}

export class AddItemsCall__Inputs {
  _call: AddItemsCall;

  constructor(call: AddItemsCall) {
    this._call = call;
  }

  get nfts(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class AddItemsCall__Outputs {
  _call: AddItemsCall;

  constructor(call: AddItemsCall) {
    this._call = call;
  }
}

export class RemoveItemCall extends ethereum.Call {
  get inputs(): RemoveItemCall__Inputs {
    return new RemoveItemCall__Inputs(this);
  }

  get outputs(): RemoveItemCall__Outputs {
    return new RemoveItemCall__Outputs(this);
  }
}

export class RemoveItemCall__Inputs {
  _call: RemoveItemCall;

  constructor(call: RemoveItemCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveItemCall__Outputs {
  _call: RemoveItemCall;

  constructor(call: RemoveItemCall) {
    this._call = call;
  }
}

export class RemoveItemsCall extends ethereum.Call {
  get inputs(): RemoveItemsCall__Inputs {
    return new RemoveItemsCall__Inputs(this);
  }

  get outputs(): RemoveItemsCall__Outputs {
    return new RemoveItemsCall__Outputs(this);
  }
}

export class RemoveItemsCall__Inputs {
  _call: RemoveItemsCall;

  constructor(call: RemoveItemsCall) {
    this._call = call;
  }

  get nfts(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class RemoveItemsCall__Outputs {
  _call: RemoveItemsCall;

  constructor(call: RemoveItemsCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
